@model Convenience.org.Components.Widgets.PreferencesEmail.PreferencesEmailViewModel
@using Kentico.PageBuilder.Web.Mvc
@using Kentico.Web.Mvc

<div class="topic-widget" style="padding: 20px;">
    <h3>Manage Preferences</h3>

    @if (TempData["SuccessMessage"] != null)
    {
        <div class="alert alert-success">@TempData["SuccessMessage"]</div>
    }

    <form asp-controller="PreferencesEmailController" asp-action="SaveEmailPreferences" method="post">
        <div>
            <br />
            <label>Events:</label>
            <div>
                @foreach (var item in Model.Events)
                {
                    <div class="form-check">
                        <input type="checkbox"
                               class="form-check-input"
                               id="event_@item.Value"
                               name="SelectedEvents"
                               value="@item.Value"
                        @(item.Selected ? "checked" : "") />
                        <label for="event_@item.Value" class="form-check-label">@item.Text</label>
                    </div>
                }
            </div>
        </div>

        <div>
            <br />
            <label>Other Topics:</label>
            <div>
                @foreach (var item in Model.OtherTopics)
                {
                    <div class="form-check">
                        <input type="checkbox"
                               class="form-check-input"
                               id="topic_@item.Value"
                               name="SelectedOtherTopics"
                               value="@item.Value"
                        @(item.Selected ? "checked" : "") />
                        <label for="topic_@item.Value" class="form-check-label">@item.Text</label>
                    </div>
                }
            </div>
        </div>

        <div>
            <br /><hr />
            <input type="checkbox"
                   class="form-check-input"
                   id="chkUnsubscribeAll"
                   name="UnsubscribeAll"
                   value="true"
                   asp-for="UnsubscribeAll" />
            <label asp-for="UnsubscribeAll" class="form-check-label">Unsubscribe from all</label>
        </div>
        @Html.Kentico().PageData()

        <br />
        <button id="btnSaveEmailPreferences" type="button">Save</button>
        <div id="statusMessagePreferences"></div>
        
    </form>
</div>


<script>
    function initializeEmailPreferencesWidget() {
        document.getElementById("btnSaveEmailPreferences").onclick = async (event) => {
            event.preventDefault();

            // Get the selected checkboxes for events
            const selectedEventCheckboxes = Array.from(document.querySelectorAll('input[name="SelectedEvents"]:checked'))
                .map(checkbox => checkbox.value);

            // Get the selected checkboxes for other topics
            const selectedOtherTopicsCheckboxes = Array.from(document.querySelectorAll('input[name="SelectedOtherTopics"]:checked'))
                .map(checkbox => checkbox.value);

            // Check if "Unsubscribe from all" is checked
            const unsubscribeAllChecked = document.querySelector('input[name="UnsubscribeAll"]').checked;

            const statusMessage = document.getElementById("statusMessagePreferences");
            statusMessage.textContent = "Saving preferences...";

            try {
                const response = await fetch('/PreferencesEmail/SaveEmailPreferences', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({
                        selectedEvents: selectedEventCheckboxes,
                        selectedOtherTopics: selectedOtherTopicsCheckboxes,
                        unsubscribeAll: unsubscribeAllChecked
                    })
                });

                if (response.ok) {
                    const result = await response.json();
                    statusMessage.textContent = result.message;
                } else {
                    statusMessage.textContent = "Failed to save preferences.";
                }
            } catch (error) {
                console.error("Error:", error);
                statusMessage.textContent = "An error occurred while saving preferences.";
            }
        };
    }

    document.addEventListener("DOMContentLoaded", initializeEmailPreferencesWidget);
    initializeEmailPreferencesWidget();
</script>
